{"remainingRequest":"/Users/suhang/Template/tradingview/demo2/node_modules/babel-loader/lib/index.js!/Users/suhang/Template/tradingview/demo2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/suhang/Template/tradingview/demo2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suhang/Template/tradingview/demo2/src/components/sSimpleCrop/sSimpleCrop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suhang/Template/tradingview/demo2/src/components/sSimpleCrop/sSimpleCrop.vue","mtime":1597639826431},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/cache-loader/dist/cjs.js","mtime":1598844172828},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/babel-loader/lib/index.js","mtime":1598844172845},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/cache-loader/dist/cjs.js","mtime":1598844172828},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/vue-loader/lib/index.js","mtime":1598844194174}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNpbXBsZUNyb3AgZnJvbSAiLi9tb2R1bGVzL2luZGV4LnZ1ZSI7CmltcG9ydCB7IEJhc2U2NCwgQmxvYiB9IGZyb20gIkAvY29tbW9uL3V0aWxzL2NhbnZhc0Zvcm1hdCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAic1NpbXBsZUNyb3AiLAogIGNvbXBvbmVudHM6IHsKICAgIFNpbXBsZUNyb3A6IFNpbXBsZUNyb3AKICB9LAogIHByb3BzOiB7CiAgICAvLyDlpLTlg4/mmL7npLrlpKflsI8KICAgIHNpemU6IHsKICAgICAgdHlwZTogU3RyaW5nIHx8IE51bWJlciwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuICIiOwogICAgICB9CiAgICB9LAogICAgLy8g5paH5Lu26L+U5Zue5qC85byPIOm7mOiupCBCbG9iCiAgICBmb3JtYXQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gIkJsb2IiOwogICAgICB9CiAgICB9LAogICAgLy8g6buY6K6k5pi+56S65Zu+54mHCiAgICBzcmM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gIiI7CiAgICAgIH0KICAgIH0sCiAgICAvLyDpu5jorqTmmL7npLrkuIrkvKDlm77moIcKICAgIGljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gInBvcnRyYWl0IjsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGltZ1VybDogIiIsCiAgICAgIGNyb3BQYXJhbXM6IHsKICAgICAgICBzcmM6ICIiLAogICAgICAgIC8vIOijgeWJquWbvueJh+WcsOWdgAogICAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICAgIHNpemU6IHsKICAgICAgICAgIC8v6KOB5Ymq5bC65a+4CiAgICAgICAgICB3aWR0aDogMzAwLAogICAgICAgICAgaGVpZ2h0OiAzMDAKICAgICAgICB9LAogICAgICAgIGJvcmRlckNvbG9yOiAiI2ZmZiIsCiAgICAgICAgLy/oo4HliarmoYbovrnmoYbpopzoibIKICAgICAgICBjcm9wU2l6ZVBlcmNlbnQ6IDAuOSAvL+ijgeWJquahhuaYvuekuuavlOS+iwoKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v55uR5ZCs6YCJ5oup5Zu+54mHCiAgICBzZXRDcm9wSW1hZ2U6IGZ1bmN0aW9uIHNldENyb3BJbWFnZShldnQpIHsKICAgICAgdmFyIGZpbGVzID0gZXZ0LnRhcmdldC5maWxlczsKCiAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5jcm9wUGFyYW1zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmNyb3BQYXJhbXMpKTsgLy/mlLnlj5jlr7nosaHlvJXnlKgKCiAgICAgICAgdGhpcy5jcm9wUGFyYW1zLnNyYyA9IGZpbGVzWzBdOwogICAgICAgIHRoaXMuY3JvcFBhcmFtcy52aXNpYmxlID0gdHJ1ZTsKICAgICAgfQoKICAgICAgZXZ0LnRhcmdldC52YWx1ZSA9ICIiOwogICAgfSwKICAgIC8v6KOB5Ymq5Zue6LCDCiAgICBjcm9wQ2FsbGJhY2s6IGZ1bmN0aW9uIGNyb3BDYWxsYmFjayhlKSB7CiAgICAgIHZhciB2bSA9IHRoaXM7IC8v57uZ6KOB5Ymq5Zue5pi+IOi1i+WAvAoKICAgICAgdm0uaW1nVXJsID0gQmFzZTY0KGUpOyAvLyDliKTmlq3ov5Tlm55CYXNlNjTmoLzlvI8KCiAgICAgIGlmICh2bS5mb3JtYXQgPT0gIkJhc2U2NCIpIHsKICAgICAgICB2bS4kZW1pdCgiY2hhbmdlIiwgQmFzZTY0KGUpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyDliKTmlq3ov5Tlm55CbG9i5qC85byPCiAgICAgICAgQmxvYihlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHZtLiRlbWl0KCJjaGFuZ2UiLCByZXMpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy/pgInkuK3nmoTlm77niYcg5YeG5aSH6L+b6KGM6KOB5YmqCiAgICB1cGxvYWRDYWxsYmFjazogZnVuY3Rpb24gdXBsb2FkQ2FsbGJhY2soZSkgey8vIGNvbnNvbGUubG9nKGUpOwogICAgfSwKICAgIC8v5YWz6Zet5by55Ye65bGCCiAgICBjbG9zZUNhbGxiYWNrOiBmdW5jdGlvbiBjbG9zZUNhbGxiYWNrKCkgey8vIGNvbnNvbGUubG9nKCLlhbPpl63lvLnlh7rlsYIiKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmltZ1VybCA9IHRoaXMuc3JjOwogIH0KfTs="},{"version":3,"sources":["sSimpleCrop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA,OAAA,UAAA,MAAA,qBAAA;AACA,SAAA,MAAA,EAAA,IAAA,QAAA,6BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MAAA,IAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KAFA;AAQA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,MAAA;AACA;AAJA,KATA;AAeA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KAhBA;AAsBA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,UAAA;AACA;AAJA;AAvBA,GAHA;AAiCA,EAAA,IAjCA,kBAiCA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA;AACA,QAAA,GAAA,EAAA,EADA;AACA;AACA,QAAA,OAAA,EAAA,KAFA;AAGA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,KAAA,EAAA,GAFA;AAGA,UAAA,MAAA,EAAA;AAHA,SAHA;AAQA,QAAA,WAAA,EAAA,MARA;AAQA;AACA,QAAA,eAAA,EAAA,GATA,CASA;;AATA;AAFA,KAAA;AAcA,GAhDA;AAiDA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,YAFA,wBAEA,GAFA,EAEA;AACA,UAAA,KAAA,GAAA,GAAA,CAAA,MAAA,CAAA,KAAA;;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CADA,CACA;;AACA,aAAA,UAAA,CAAA,GAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AACA,aAAA,UAAA,CAAA,OAAA,GAAA,IAAA;AACA;;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAVA;AAWA;AACA,IAAA,YAZA,wBAYA,CAZA,EAYA;AACA,UAAA,EAAA,GAAA,IAAA,CADA,CAEA;;AACA,MAAA,EAAA,CAAA,MAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAHA,CAKA;;AACA,UAAA,EAAA,CAAA,MAAA,IAAA,QAAA,EAAA;AACA,QAAA,EAAA,CAAA,KAAA,CAAA,QAAA,EAAA,MAAA,CAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA;AACA,QAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,EAAA,CAAA,KAAA,CAAA,QAAA,EAAA,GAAA;AACA,SAFA;AAGA;AACA,KA1BA;AA2BA;AACA,IAAA,cA5BA,0BA4BA,CA5BA,EA4BA,CACA;AACA,KA9BA;AA+BA;AACA,IAAA,aAhCA,2BAgCA,CACA;AACA;AAlCA,GAjDA;AAqFA,EAAA,OArFA,qBAqFA;AACA,SAAA,MAAA,GAAA,KAAA,GAAA;AACA;AAvFA,CAAA","sourcesContent":["<template>\n  <div class=\"simple-crop-Wrap\">\n    <simple-crop\n      :crop-params=\"cropParams\"\n      @crop=\"cropCallback\"\n      @upload=\"uploadCallback\"\n      @close=\"closeCallback\"\n    />\n    <div class=\"avatar\" ref=\"avatar\">\n      <input @change=\"setCropImage\" type=\"file\" accept=\"image/*\" />\n      <img v-if=\"imgUrl!=''\" :src=\"imgUrl\" alt />\n      <i v-else :class=\"`iconfont icon-${icon}`\"></i>\n    </div>\n  </div>\n</template>\n<script>\nimport SimpleCrop from \"./modules/index.vue\";\nimport { Base64, Blob } from \"@/common/utils/canvasFormat\";\nexport default {\n  name: \"sSimpleCrop\",\n  components: { SimpleCrop },\n  props: {\n    // 头像显示大小\n    size: {\n      type: String || Number,\n      default: function () {\n        return \"\";\n      },\n    },\n    // 文件返回格式 默认 Blob\n    format: {\n      type: String,\n      default: function () {\n        return \"Blob\";\n      },\n    },\n    // 默认显示图片\n    src: {\n      type: String,\n      default: function () {\n        return \"\";\n      },\n    },\n    // 默认显示上传图标\n    icon: {\n      type: String,\n      default: function () {\n        return \"portrait\";\n      },\n    },\n  },\n  data() {\n    return {\n      imgUrl: \"\",\n      cropParams: {\n        src: \"\", // 裁剪图片地址\n        visible: false,\n        size: {\n          //裁剪尺寸\n          width: 300,\n          height: 300,\n        },\n        borderColor: \"#fff\", //裁剪框边框颜色\n        cropSizePercent: 0.9, //裁剪框显示比例\n      },\n    };\n  },\n  methods: {\n    //监听选择图片\n    setCropImage(evt) {\n      var files = evt.target.files;\n      if (files.length > 0) {\n        this.cropParams = JSON.parse(JSON.stringify(this.cropParams)); //改变对象引用\n        this.cropParams.src = files[0];\n        this.cropParams.visible = true;\n      }\n      evt.target.value = \"\";\n    },\n    //裁剪回调\n    cropCallback(e) {\n      const vm = this;\n      //给裁剪回显 赋值\n      vm.imgUrl = Base64(e);\n\n      // 判断返回Base64格式\n      if (vm.format == \"Base64\") {\n        vm.$emit(\"change\", Base64(e));\n      } else {\n        // 判断返回Blob格式\n        Blob(e).then((res) => {\n          vm.$emit(\"change\", res);\n        });\n      }\n    },\n    //选中的图片 准备进行裁剪\n    uploadCallback(e) {\n      // console.log(e);\n    },\n    //关闭弹出层\n    closeCallback() {\n      // console.log(\"关闭弹出层\");\n    },\n  },\n  mounted() {\n    this.imgUrl = this.src;\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"./modules/mobile.css\";\n@import \"./font/iconfont.css\";\n.simple-crop-Wrap {\n  width: 100%;\n  height: 100%;\n  .avatar {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    background-color: #aaa;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    input {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      opacity: 0;\n      z-index: 2;\n    }\n    img {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .iconfont {\n      color: #fff;\n      font-size: 30px;\n    }\n  }\n}\n</style>"],"sourceRoot":"src/components/sSimpleCrop"}]}
{"remainingRequest":"/Users/suhang/Template/tradingview-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suhang/Template/tradingview-vue/src/components/sTradingview/sTradingview.vue?vue&type=style&index=0&id=2335392f&lang=scss&scoped=true&","dependencies":[{"path":"/Users/suhang/Template/tradingview-vue/src/components/sTradingview/sTradingview.vue","mtime":1599244746333},{"path":"/Users/suhang/Template/tradingview-vue/node_modules/css-loader/dist/cjs.js","mtime":1598844192908},{"path":"/Users/suhang/Template/tradingview-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1598844194174},{"path":"/Users/suhang/Template/tradingview-vue/node_modules/postcss-loader/src/index.js","mtime":1598844193730},{"path":"/Users/suhang/Template/tradingview-vue/node_modules/sass-loader/dist/cjs.js","mtime":1599133639901},{"path":"/Users/suhang/Template/tradingview-vue/node_modules/cache-loader/dist/cjs.js","mtime":1598844172828},{"path":"/Users/suhang/Template/tradingview-vue/node_modules/vue-loader/lib/index.js","mtime":1598844194174}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zVHJhZGluZ3ZpZXdDb250ZW50IHsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7CiAgLnRhYnNXcmFwIHsKICAgIGhlaWdodDogODhweDsKICB9CiAgLnNUcmFkaW5ndmlld1ZpZXcgewogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA4OHB4KTsKICB9Cn0K"},{"version":3,"sources":["sTradingview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sTradingview.vue","sourceRoot":"src/components/sTradingview","sourcesContent":["<template>\n  <div class=\"sTradingviewContent\">\n    <van-tabs\n      class=\"tabsWrap\"\n      title-active-color=\"#6394f0\"\n      title-inactive-color=\"#7a90ad\"\n      color=\"#6394f0\"\n      background=\"#2a3041\"\n      v-model=\"interval\"\n      @change=\"changeTabs\"\n    >\n      <van-tab v-for=\"(item,index) in tabsArr\" :title=\"item.name\" :name=\"item.value\" :key=\"index\" />\n    </van-tabs>\n    <div :id=\"domId\" class=\"sTradingviewView\"></div>\n  </div>\n</template>\n<script>\nimport { widget } from \"@/common/tradingview/charting_library.min.js\";\nimport datafeeds from \"@/common/tradingview/datafees.js\";\nimport config from \"./config\";\nimport { webSocketMixin } from \"./mixin/webSocket\";\nexport default {\n  name: \"sTradingview\",\n  mixins: [webSocketMixin],\n  props: {\n    //Dom元素id\n    domId: {\n      type: String,\n      default: function () {\n        return \"tradeView\";\n      },\n    },\n    //请求地址\n    wsUrl: {\n      type: String,\n      default: function () {\n        return \"\";\n      },\n    },\n    //是否显示MACD\n    is_MACD: {\n      type: Boolean,\n      default: function () {\n        return false;\n      },\n    },\n  },\n  data() {\n    return {\n      tabsArr: [\n        // {\n        //   name: \"分时\",\n        //   value: \"1S\",\n        //   websockSend: \"0\",\n        // },\n        {\n          name: \"1分钟\",\n          value: \"1min\",\n          websockSend: \"1\",\n        },\n        {\n          name: \"5分钟\",\n          value: \"5min\",\n          websockSend: \"5\",\n        },\n        {\n          name: \"15分钟\",\n          value: \"15min\",\n          websockSend: \"15\",\n        },\n        {\n          name: \"30分钟\",\n          value: \"30min\",\n          websockSend: \"30\",\n        },\n        {\n          name: \"1小时\",\n          value: \"60min\",\n          websockSend: \"60\",\n        },\n        {\n          name: \"日线\",\n          value: \"1day\",\n          websockSend: \"1D\",\n        },\n        {\n          name: \"周线\",\n          value: \"1week\",\n          websockSend: \"1W\",\n        },\n        {\n          name: \"月线\",\n          value: \"1mon\",\n          websockSend: \"1M\",\n        },\n      ],\n      symbol: \"LTC_USDT\",\n      interval: \"1min\",\n      chart: null,\n      initdata: {},\n      countDate: 0, //累加条数\n      startData: 0, //起始条数\n      lengsData: 200, //结束长度\n      datafeeds: new datafeeds(this),\n      onLoadedCallback: null, //初始数据回调\n      onRealtimeCallback: null, //websocket数据回调\n    };\n  },\n  mounted() {\n    //加载K线图\n    this.loadChart();\n  },\n  methods: {\n    /**\n     * 切换触发\n     * e {string} reset=重置数据\n     */\n    changeTabs(e) {\n      this.interval = e;\n      this.setSymbols();\n      this.chart\n        .chart()\n        .setResolution(this.filter(e), function onReadyCallback(e) {});\n      this.webSocket(\"load\");\n    },\n    filter(time) {\n      if (time == \"1S\") return \"1S\";\n      else if (time == \"1min\") return \"1\";\n      else if (time == \"5min\") return \"5\";\n      else if (time == \"15min\") return \"15\";\n      else if (time == \"30min\") return \"30\";\n      else if (time == \"60min\") return \"60\";\n      else if (time == \"1day\") return \"1D\";\n      else if (time == \"1week\") return \"1W\";\n      else if (time == \"1mon\") return \"1M\";\n    },\n\n    // 请求数据\n    getBars(\n      symbolInfo,\n      resolution,\n      rangeStartDate,\n      rangeEndDate,\n      onLoadedCallback\n    ) {\n      this.onLoadedCallback = onLoadedCallback;\n      this.webSocket(\"load\");\n    },\n\n    //socket\n    subscribeBars(\n      symbolInfo,\n      resolution,\n      onRealtimeCallback,\n      subscriberUID,\n      onResetCacheNeededCallback\n    ) {\n      this.onRealtimeCallback = onRealtimeCallback;\n      this.webSocket(\"get\");\n    },\n\n    //获取配置信息\n    getSymbol(symbol) {\n      return {\n        name: symbol,\n        full_name: symbol,\n        timezone: \"Asia/Shanghai\",\n        minmov: 1,\n        minmov2: 0,\n        pointvalue: 1,\n        fractional: false,\n        //设置周期\n        session: \"24x7\",\n        has_intraday: true,\n        has_no_volume: false,\n        //设置是否支持周月线\n        has_daily: true,\n        //设置是否支持周月线\n        // has_weekly_and_monthly: true,\n        description: symbol,\n        //设置精度  100表示保留两位小数   1000三位   10000四位\n        pricescale: 100,\n        ticker: symbol,\n        //  'supported_resolutions': ['1', '5', '15', '30', '60', '240','1D', '5D', '1W', '1M']\n      };\n    },\n\n    //设置品信息(重新获取初始数据/推送数据)\n    setSymbols() {\n      let self = this;\n      self.chart.setSymbol(\n        self.symbol,\n        self.filter(self.interval),\n        function () {\n          self.chart.chart().setVisibleRange(self.initdata);\n          self.chart.chart().executeActionById(\"timeScaleReset\");\n        }\n      );\n    },\n\n    //卸载K线\n    removeChart() {\n      if (this.chart) {\n        this.chart.remove();\n        this.chart = null;\n      }\n    },\n\n    //加载K线图插件\n    loadChart() {\n      let self = this;\n      this.chart = new widget({\n        container_id: self.domId,\n        symbol: self.symbol,\n        interval: self.filter(self.interval),\n        locale: \"zh\",\n        autosize: true,\n        fullscreen: false, //是否占用视图所有空间\n        preset: \"mobile\",\n        toolbar_bg: \"#1e2235\",\n        datafeed: this.datafeeds,\n        timezone: \"Asia/Shanghai\",\n        library_path: \"/static/charting_library/\",\n        indicators_file_name: \"custom-study(MACD红绿).js\",\n        drawings_access: {\n          type: \"black\",\n          tools: [{ name: \"Regression Trend\" }],\n        },\n        //配置项\n        ...config,\n      });\n\n      this.chart.onChartReady(function () {\n        //设置均线种类 均线样式\n        // self.chart.chart().createStudy('Moving Average', false, false, [5], null, {'Plot.color': 'rgb(150, 95, 196)'});\n        // self.chart.chart().createStudy('Moving Average', false, false, [10], null, {'Plot.color': 'rgb(116,149,187)'});\n        // self.chart.chart().createStudy('Moving Average', false, false, [20],null,{\"plot.color\": \"rgb(58,113,74)\"});\n        // self.chart.chart().createStudy('Moving Average', false, false, [30],null,{\"plot.color\": \"rgb(118,32,99)\"});\n        try {\n          self.chart\n            .chart()\n            .createStudy(\"Moving Average\", !1, !1, [7], null, {});\n          self.chart\n            .chart()\n            .createStudy(\"Moving Average\", !1, !1, [10], null, {});\n          self.chart\n            .chart()\n            .createStudy(\"Moving Average\", !1, !1, [30], null, {});\n          if (self.is_MACD) {\n            self.chart.chart().createStudy(\"MACD\", !1, !1, [20], null, {}); //MACD\n            self.chart\n              .chart()\n              .createStudy(\n                \"指数平滑异同移动平均线(MACD_Custom)\",\n                false,\n                false,\n                [20],\n                null,\n                {}\n              ); //自定义MACD\n          }\n        } catch (e) {}\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.sTradingviewContent {\n  height: 100%;\n  width: 100%;\n  .tabsWrap {\n    height: 88px;\n  }\n  .sTradingviewView {\n    height: calc(100% - 88px);\n  }\n}\n</style>\n"]}]}
{"remainingRequest":"/Users/suhang/Template/tradingview/demo2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suhang/Template/tradingview/demo2/src/components/sSimpleCrop/sSimpleCrop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suhang/Template/tradingview/demo2/src/components/sSimpleCrop/sSimpleCrop.vue","mtime":1597639826431},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/cache-loader/dist/cjs.js","mtime":1598844172828},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/babel-loader/lib/index.js","mtime":1598844172845},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/cache-loader/dist/cjs.js","mtime":1598844172828},{"path":"/Users/suhang/Template/tradingview/demo2/node_modules/vue-loader/lib/index.js","mtime":1598844194174}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTaW1wbGVDcm9wIGZyb20gIi4vbW9kdWxlcy9pbmRleC52dWUiOwppbXBvcnQgeyBCYXNlNjQsIEJsb2IgfSBmcm9tICJAL2NvbW1vbi91dGlscy9jYW52YXNGb3JtYXQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInNTaW1wbGVDcm9wIiwKICBjb21wb25lbnRzOiB7IFNpbXBsZUNyb3AgfSwKICBwcm9wczogewogICAgLy8g5aS05YOP5pi+56S65aSn5bCPCiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZyB8fCBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gIiI7CiAgICAgIH0sCiAgICB9LAogICAgLy8g5paH5Lu26L+U5Zue5qC85byPIOm7mOiupCBCbG9iCiAgICBmb3JtYXQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuICJCbG9iIjsKICAgICAgfSwKICAgIH0sCiAgICAvLyDpu5jorqTmmL7npLrlm77niYcKICAgIHNyYzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gIiI7CiAgICAgIH0sCiAgICB9LAogICAgLy8g6buY6K6k5pi+56S65LiK5Lyg5Zu+5qCHCiAgICBpY29uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiAicG9ydHJhaXQiOwogICAgICB9LAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWdVcmw6ICIiLAogICAgICBjcm9wUGFyYW1zOiB7CiAgICAgICAgc3JjOiAiIiwgLy8g6KOB5Ymq5Zu+54mH5Zyw5Z2ACiAgICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgICAgc2l6ZTogewogICAgICAgICAgLy/oo4HliarlsLrlr7gKICAgICAgICAgIHdpZHRoOiAzMDAsCiAgICAgICAgICBoZWlnaHQ6IDMwMCwKICAgICAgICB9LAogICAgICAgIGJvcmRlckNvbG9yOiAiI2ZmZiIsIC8v6KOB5Ymq5qGG6L655qGG6aKc6ImyCiAgICAgICAgY3JvcFNpemVQZXJjZW50OiAwLjksIC8v6KOB5Ymq5qGG5pi+56S65q+U5L6LCiAgICAgIH0sCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy/nm5HlkKzpgInmi6nlm77niYcKICAgIHNldENyb3BJbWFnZShldnQpIHsKICAgICAgdmFyIGZpbGVzID0gZXZ0LnRhcmdldC5maWxlczsKICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLmNyb3BQYXJhbXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuY3JvcFBhcmFtcykpOyAvL+aUueWPmOWvueixoeW8leeUqAogICAgICAgIHRoaXMuY3JvcFBhcmFtcy5zcmMgPSBmaWxlc1swXTsKICAgICAgICB0aGlzLmNyb3BQYXJhbXMudmlzaWJsZSA9IHRydWU7CiAgICAgIH0KICAgICAgZXZ0LnRhcmdldC52YWx1ZSA9ICIiOwogICAgfSwKICAgIC8v6KOB5Ymq5Zue6LCDCiAgICBjcm9wQ2FsbGJhY2soZSkgewogICAgICBjb25zdCB2bSA9IHRoaXM7CiAgICAgIC8v57uZ6KOB5Ymq5Zue5pi+IOi1i+WAvAogICAgICB2bS5pbWdVcmwgPSBCYXNlNjQoZSk7CgogICAgICAvLyDliKTmlq3ov5Tlm55CYXNlNjTmoLzlvI8KICAgICAgaWYgKHZtLmZvcm1hdCA9PSAiQmFzZTY0IikgewogICAgICAgIHZtLiRlbWl0KCJjaGFuZ2UiLCBCYXNlNjQoZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIOWIpOaWrei/lOWbnkJsb2LmoLzlvI8KICAgICAgICBCbG9iKGUpLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdm0uJGVtaXQoImNoYW5nZSIsIHJlcyk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICAvL+mAieS4reeahOWbvueJhyDlh4blpIfov5vooYzoo4HliaoKICAgIHVwbG9hZENhbGxiYWNrKGUpIHsKICAgICAgLy8gY29uc29sZS5sb2coZSk7CiAgICB9LAogICAgLy/lhbPpl63lvLnlh7rlsYIKICAgIGNsb3NlQ2FsbGJhY2soKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCLlhbPpl63lvLnlh7rlsYIiKTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5pbWdVcmwgPSB0aGlzLnNyYzsKICB9LAp9Owo="},{"version":3,"sources":["sSimpleCrop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sSimpleCrop.vue","sourceRoot":"src/components/sSimpleCrop","sourcesContent":["<template>\n  <div class=\"simple-crop-Wrap\">\n    <simple-crop\n      :crop-params=\"cropParams\"\n      @crop=\"cropCallback\"\n      @upload=\"uploadCallback\"\n      @close=\"closeCallback\"\n    />\n    <div class=\"avatar\" ref=\"avatar\">\n      <input @change=\"setCropImage\" type=\"file\" accept=\"image/*\" />\n      <img v-if=\"imgUrl!=''\" :src=\"imgUrl\" alt />\n      <i v-else :class=\"`iconfont icon-${icon}`\"></i>\n    </div>\n  </div>\n</template>\n<script>\nimport SimpleCrop from \"./modules/index.vue\";\nimport { Base64, Blob } from \"@/common/utils/canvasFormat\";\nexport default {\n  name: \"sSimpleCrop\",\n  components: { SimpleCrop },\n  props: {\n    // 头像显示大小\n    size: {\n      type: String || Number,\n      default: function () {\n        return \"\";\n      },\n    },\n    // 文件返回格式 默认 Blob\n    format: {\n      type: String,\n      default: function () {\n        return \"Blob\";\n      },\n    },\n    // 默认显示图片\n    src: {\n      type: String,\n      default: function () {\n        return \"\";\n      },\n    },\n    // 默认显示上传图标\n    icon: {\n      type: String,\n      default: function () {\n        return \"portrait\";\n      },\n    },\n  },\n  data() {\n    return {\n      imgUrl: \"\",\n      cropParams: {\n        src: \"\", // 裁剪图片地址\n        visible: false,\n        size: {\n          //裁剪尺寸\n          width: 300,\n          height: 300,\n        },\n        borderColor: \"#fff\", //裁剪框边框颜色\n        cropSizePercent: 0.9, //裁剪框显示比例\n      },\n    };\n  },\n  methods: {\n    //监听选择图片\n    setCropImage(evt) {\n      var files = evt.target.files;\n      if (files.length > 0) {\n        this.cropParams = JSON.parse(JSON.stringify(this.cropParams)); //改变对象引用\n        this.cropParams.src = files[0];\n        this.cropParams.visible = true;\n      }\n      evt.target.value = \"\";\n    },\n    //裁剪回调\n    cropCallback(e) {\n      const vm = this;\n      //给裁剪回显 赋值\n      vm.imgUrl = Base64(e);\n\n      // 判断返回Base64格式\n      if (vm.format == \"Base64\") {\n        vm.$emit(\"change\", Base64(e));\n      } else {\n        // 判断返回Blob格式\n        Blob(e).then((res) => {\n          vm.$emit(\"change\", res);\n        });\n      }\n    },\n    //选中的图片 准备进行裁剪\n    uploadCallback(e) {\n      // console.log(e);\n    },\n    //关闭弹出层\n    closeCallback() {\n      // console.log(\"关闭弹出层\");\n    },\n  },\n  mounted() {\n    this.imgUrl = this.src;\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"./modules/mobile.css\";\n@import \"./font/iconfont.css\";\n.simple-crop-Wrap {\n  width: 100%;\n  height: 100%;\n  .avatar {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    background-color: #aaa;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    input {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      opacity: 0;\n      z-index: 2;\n    }\n    img {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .iconfont {\n      color: #fff;\n      font-size: 30px;\n    }\n  }\n}\n</style>"]}]}